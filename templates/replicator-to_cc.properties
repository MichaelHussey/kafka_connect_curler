{
        "connector.class": "${CONNECTOR_TYPE}",
		# Number of threads to run (increase to scale up)
        "tasks.max": "1",
		# See https://docs.confluent.io/current/connect/kafka-connect-replicator/configuration_options.html 
		# for all properties used by replicator
		# or https://github.com/confluentinc/cp-demo/blob/5.5.0-post/scripts/connectors/submit_replicator_config.sh

	    "key.converter": "io.confluent.connect.replicator.util.ByteArrayConverter",
	    "value.converter": "io.confluent.connect.replicator.util.ByteArrayConverter",

		# Replicator can create the destination topic for you in Confluent Cloud (using the Admin API)
		"topic.auto.create": "true",
		# If you want the same number of partitions on Confluent Cloud as in the source cluster set to true
		"topic.preserve.partitions": "true",
		# If using a RegEx topic list or whitelist, do you want to pick up and replicate newly created topics in the source?
		"topic.config.sync": "false",
		# All topics in Confluent Cloud must have replicaton.factor=3
		# Needed if the source topics can have a different setting
		"dest.topic.replication.factor": "3",

		"topic.regex": "g2c_.*",
		"topic.whitelist":"test-topic",
		"topic.rename.format":"${topic}.replica",
		
		"offset.storage.topic": "replicator-offsets",
		"status.storage.topic": "replicator-status",
		"config.storage.topic": "replicator-configs",
		"config.storage.replication.factor": "3",
		"offset.storage.replication.factor": "3",
		"status.storage.replication.factor": "3",
		
		#Source settings
		"src.kafka.bootstrap.servers": "kafka:29092",
		"src.kafka.request.timeout.ms": "10000",
		
		# Monitoring interceptors
	    "src.consumer.interceptor.classes": "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor",
	    #"src.consumer.confluent.monitoring.interceptor.bootstrap.servers": "kafka:29092",
	    "src.kafka.timestamps.producer.interceptor.classes": "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
	    #"src.kafka.timestamps.producer.confluent.monitoring.interceptor.bootstrap.servers": "kafka:29092"
		
}
